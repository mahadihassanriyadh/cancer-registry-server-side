// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  name             String
  email            String    @unique
  dateOfBirth      DateTime?
  bloodGroup       String?
  height           String?
  weight           String?
  contactNum       String?   @unique
  address          String?
  emergencyContact String?
  role             Role      @default(PATIENT)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  // patient fields
  malignancies   PatientMalignancy[] @relation("patientMalignancy")
  medicalReports MedicalReport[]     @relation("userMedicalReport")
  doctors        DoctorPatient[]     @relation("doctorOfPatient")

  // doctor fields
  treatedPatients DoctorPatient[] @relation("patientOfDoctor")

  @@index([email], name: "user_email")
}

enum Role {
  PATIENT
  DOCTOR
  ADMIN
}

model Malignancy {
  id                String              @id @default(uuid())
  name              String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  PatientMalignancy PatientMalignancy[]
}

// many to many relationship between patient and malignancy, a connection table is created
model PatientMalignancy {
  id           String     @id @default(uuid())
  patient      User       @relation("patientMalignancy", fields: [patientId], references: [id])
  patientId    String
  malignancy   Malignancy @relation(fields: [malignancyId], references: [id])
  malignancyId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@unique([patientId, malignancyId])
}

model MedicalTest {
  id        String          @id @default(uuid())
  name      String          @unique
  reports   MedicalReport[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model MedicalReport {
  id        String      @id @default(uuid())
  data      Json        @default("{}")
  test      MedicalTest @relation(fields: [testId], references: [id])
  testId    String
  patient   User        @relation("userMedicalReport", fields: [patientId], references: [id])
  patientId String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model DoctorPatient {
  id        String   @id @default(uuid())
  doctor    User     @relation("doctorOfPatient", fields: [doctorId], references: [id])
  doctorId  String
  patient   User     @relation("patientOfDoctor", fields: [patientId], references: [id])
  patientId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([doctorId, patientId])
}
